.class StreamHeader {
  .field public int32 offset
  .field public int32 size
  .field public string name

  .method public hidebysig specialname rtspecialname instance void .ctor ()
  {
      IL_0000: ldarg.0
      IL_0001: call instance void [mscorlib]System.Object::.ctor()
      IL_0006: ret
  }

  .method static class StreamHeader TildeStream() {
    .locals init (class StreamHeader h)
    newobj instance void StreamHeader::.ctor()
    stloc.0

    ldloc.0
    ldc.i4 0x6C // TODO read this from first-pass StringHeap.START_RVA
    stfld int32 StreamHeader::offset

    ldloc.0
    ldc.i4 0xBC
    stfld int32 StreamHeader::size

    ldloc.0
    ldstr "#~"
    stfld string StreamHeader::name

    ldloc.0
    ret
  }

  .method public static void Write(class [mscorlib]System.IO.Stream) {
    // write 0x0005
    ldarg.0
    ldc.i4.5
    callvirt instance void [mscorlib]System.IO.Stream::WriteByte(uint8)
    ldarg.0
    ldc.i4.0
    callvirt instance void [mscorlib]System.IO.Stream::WriteByte(uint8)

    // TODO for all 5 headers
    call class StreamHeader StreamHeader::TildeStream()
    ldarg.0
    call instance void StreamHeader::WriteStreamHeader(class [mscorlib]System.IO.Stream)

    ret
  }

  .method void WriteStreamHeader(class [mscorlib]System.IO.Stream) {
    .locals init (class [mscorlib]System.IO.BinaryWriter writer)
    ldarg.1
    newobj instance void [mscorlib]System.IO.BinaryWriter::.ctor(class [mscorlib]System.IO.Stream)
    stloc.0

    ldloc.0
    ldarg.0
    ldfld int32 StreamHeader::offset
    callvirt instance void [mscorlib]System.IO.BinaryWriter::Write(int32)

    ldloc.0
    ldarg.0
    ldfld int32 StreamHeader::size
    callvirt instance void [mscorlib]System.IO.BinaryWriter::Write(int32)

    ldloc.0
    call class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    ldarg.0
    ldfld string StreamHeader::name
    callvirt instance uint8[] [mscorlib]System.Text.Encoding::GetBytes(string)
    callvirt instance void [mscorlib]System.IO.BinaryWriter::Write(uint8[])

    ldloc.0
    ldc.i4.0
    callvirt instance void [mscorlib]System.IO.BinaryWriter::Write(int8)

    // TODO loop writing 0 until multiple of 4
    ldloc.0
    ldc.i4.0
    callvirt instance void [mscorlib]System.IO.BinaryWriter::Write(int8)

    ret
  }
}

.class abstract sealed StringHeap {
  .field public static int64 fileStart
  .field public static int64 fileEnd

  .field static class [mscorlib]System.IO.Stream data
  .field static class [mscorlib]System.IO.StreamWriter writer
  .field static class [mscorlib]System.Collections.Generic.Dictionary`2<string,int32> cache

  .method static hidebysig specialname rtspecialname default void .cctor() {
    newobj instance void [mscorlib]System.IO.MemoryStream::.ctor()
    dup
    stsfld class [mscorlib]System.IO.Stream StringHeap::data
    newobj instance void [mscorlib]System.IO.StreamWriter::.ctor(class [mscorlib]System.IO.Stream)
    dup
    stsfld class [mscorlib]System.IO.StreamWriter StringHeap::writer
    ldc.i4.1
    callvirt instance void [mscorlib]System.IO.StreamWriter::set_AutoFlush(bool)

    newobj instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,int32>::.ctor()
    stsfld class [mscorlib]System.Collections.Generic.Dictionary`2<string,int32> StringHeap::cache
    ret
  }

  // Returns index into the StringHeap, useable for a StringHeapIndex
  .method public static int32 Add(string key) {
    .locals init (int32 pos)
    ldsfld class [mscorlib]System.Collections.Generic.Dictionary`2<string,int32> StringHeap::cache

    ldarg.0
    callvirt instance bool class [mscorlib]System.Collections.Generic.Dictionary`2<string, int32>::ContainsKey(!0)
    brfalse.s INSERT
    
    ldsfld class [mscorlib]System.Collections.Generic.Dictionary`2<string,int32> StringHeap::cache
    ldarg.0
    callvirt instance !1 class [mscorlib]System.Collections.Generic.Dictionary`2<string, int32>::get_Item(!0)
    ret

INSERT:
    
    ldsfld class [mscorlib]System.IO.Stream StringHeap::data
    callvirt instance int64 class [mscorlib]System.IO.Stream::get_Position()
    conv.i4
    stloc.s pos
    
    ldsfld class [mscorlib]System.Collections.Generic.Dictionary`2<string,int32> StringHeap::cache
    ldarg.0
    ldloc.s pos
    callvirt instance void class [mscorlib]System.Collections.Generic.Dictionary`2<string,int32>::set_Item(!0, !1)

    ldsfld class [mscorlib]System.IO.StreamWriter StringHeap::writer
    ldarg.0
    callvirt instance void [mscorlib]System.IO.StreamWriter::Write(string)
    ldsfld class [mscorlib]System.IO.StreamWriter StringHeap::writer
    ldc.i4.0
    callvirt instance void [mscorlib]System.IO.StreamWriter::Write(char)

    ldloc.s pos
    ret
  }

  .method public static void WriteHeap(class [mscorlib]System.IO.Stream) {
    ldarg.0
    callvirt instance int64 class [mscorlib]System.IO.Stream::get_Position()
    stsfld int64 StringHeap::fileStart

    // Reposition the stream to the beginning
    ldsfld class [mscorlib]System.IO.Stream StringHeap::data
    ldc.i8 0
    callvirt instance void [mscorlib]System.IO.Stream::set_Position(int64)
    
    ldsfld class [mscorlib]System.IO.Stream StringHeap::data
    ldarg.0
    callvirt instance void [mscorlib]System.IO.Stream::CopyTo(class [mscorlib]System.IO.Stream)

    ldarg.0
    callvirt instance int64 class [mscorlib]System.IO.Stream::get_Position()
    stsfld int64 StringHeap::fileEnd

    ret
  }
}
